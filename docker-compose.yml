version: "3.8"

services:
    nginx-proxy:
        image: jwilder/nginx-proxy
        container_name: nginx-proxy
        restart: always
        ports:
            - "8080:80"
            - "4443:443"
        volumes:
            - /var/run/docker.sock:/tmp/docker.sock:ro
            - ./certs:/etc/nginx/certs
            - ./vhost.d:/etc/nginx/vhost.d
            - ./html:/usr/share/nginx/html
            - ./conf.d:/etc/nginx/conf.d
        environment:
            - DEFAULT_HOST=orthopride.zenn.digital
            - VIRTUAL_PORT=80 # Important for frontend
            - ACME_LOCATION=/etc/nginx/certs/acme

    letsencrypt:
        image: jrcs/letsencrypt-nginx-proxy-companion
        container_name: nginx-letsencrypt
        restart: always
        environment:
            - NGINX_PROXY_CONTAINER=nginx-proxy
            - DEBUG=true # For troubleshooting
            - ACME_LOCATION=/etc/nginx/certs/acme # Must match nginx-proxy
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - ./certs:/etc/nginx/certs:rw
            - ./vhost.d:/etc/nginx/vhost.d
            - ./html:/usr/share/nginx/html
            - ./conf.d:/etc/nginx/conf.d

    frontend:
        build: ./orthopride_app
        expose:
            - "80"
        environment:
            - VIRTUAL_HOST=orthopride.zenn.digital
            - VIRTUAL_PORT=80 # Must match internal port
            - LETSENCRYPT_HOST=orthopride.zenn.digital
            - LETSENCRYPT_EMAIL=your@email.com
        depends_on:
            - backend

    backend:
        build: ./backend
        expose:
            - "5000"
        environment:
            - DATABASE_URL=postgresql://postgres:sichagabi@db:5432/orthopride
            - VIRTUAL_HOST=orthoprideapi.zenn.digital
            - VIRTUAL_PORT=5000
            - LETSENCRYPT_HOST=orthoprideapi.zenn.digital
            - LETSENCRYPT_EMAIL=your@email.com
        depends_on:
            - db

    db:
        image: postgres:15
        restart: always
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: sichagabi
            POSTGRES_DB: orthopride
        ports:
            - "5433:5432"
        volumes:
            - pgdata:/var/lib/postgresql/data
            - ./orthopride_dump.sql:/docker-entrypoint-initdb.d/orthopride_dump.sql
        command: >
            bash -c "
            # First run a script to clean the dump
            sed '/transaction_timeout/d' /docker-entrypoint-initdb.d/orthopride_dump.sql > /docker-entrypoint-initdb.d/cleaned_dump.sql &&
            # Then run the normal entrypoint
            docker-entrypoint.sh postgres
            "

volumes:
    pgdata:
